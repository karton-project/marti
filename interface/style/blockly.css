body {
    background-color: #F5F5F5;
}

body, input, button {
    font-family: 'Josefin Sans', sans-serif;
    color: #37474F;
}

h1 {
    margin-top: 10px;
    margin-bottom: 10px;
    padding: 10px;
}

h3 {
    padding: 10px;
}

h3 div {
    margin-bottom: 10px;
}

canvas {
    max-width: 100%;
    height: auto;
}

.tagline {
    position: relative;
    margin-top: 0;
}

.tagline-text {
    vertical-align: middle;
}

a {
    font-weight: bold;
}

a, a:hover {
    color: #ecf0f1;
}

pre {
    white-space: pre-wrap;
}

pre code {
    color: #fff;
    font-size: 14px;
    line-height: 1.3;
}

label {
    display: block;
    margin-bottom: 15px;
}

sub {
    display: block;
    text-align: right;
    margin-top: -10px;
    font-size: 11px;
    font-style: italic;
}

.parent {
    background-color: rgba(255, 255, 255, 0.2);
    margin: 50px 0;
    padding: 20px;
}

input {
    border: none;
    outline: none;
    background-color: #ecf0f1;
    padding: 10px;
    color: #942A57;
    border: 0;
    margin: 5px 0;
    display: block;
    width: 100%;
}

button {
    background-color: #ecf0f1;
    color: #007bff;
    border: 0;
    border-radius: 0.2em;
    padding: 18px 12px;
    margin: 0.5em;
    margin-left: 6px;
    cursor: pointer;
    outline: none;
}

button:hover {
    background-color: #e74c3c;
    color: #ecf0f1;
}

.gh-fork {
    position: fixed;
    top: 0;
    right: 0;
    border: 0;
}

.block_modal {
    display: none;
}

/* dragula-specific example page styles */

.wrapper {
    display: table;
    table-layout: fixed;
    width: 100%;
}

.table-wrapper {
    height: 360px;
    margin: auto;
    width: 100%;
    overflow: auto;
}

.container {
    height: 720px;
    max-height: 720px;
    overflow-x: hidden;
    overflow-y: auto;
}

.grid-container {
    display: grid;
    grid-template-columns: 60% 40%;
}

.source_container {
    background: #F8BBD0;
}

.block_container {
    background: #FFECB3;
}

.code_container {
    background: #F8BBD0;
}

.output_container {
    background: #FFECB3;
}

.visualization_container {
    background: #F8BBD0;
}

.tangible_source_container {
    width: 10%;
}

.tangible_block_container {
    width: 40%;
}

.tangible_recognizers_container {
    width: 50%;
}

.fullWidth {
    margin: 0.25em;
    width: 98%;
}

.flexArea {
    display: flex;
    position: absolute;
}

.container:nth-child(odd) {
    background-color: rgba(0, 0, 0, 0.2);
}

/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */

.container > div, .gu-mirror {
    margin: 10px;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.2);
    transition: opacity 0.4s ease-in-out;
}

.container > div {
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
}

.gu-mirror {
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
}

.dropzone {
    background: white;
    border-radius: 5px;
    border: 2px dashed rgb(0, 135, 247);
    border-image: none;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
}

.container .ex-moved {
    background-color: #e74c3c;
}

.container.ex-over {
    background-color: rgba(255, 255, 255, 0.3);
}

#left-lovehandles > div, #right-lovehandles > div {
    cursor: initial;
}

.alignleft {
    float: left;
}

.alignright {
    float: right;
}

.handle {
    padding: 0 5px;
    margin-right: 5px;
    background-color: rgba(0, 0, 0, 0.4);
    cursor: move;
}

.image-thing {
    margin: 20px 0;
    display: block;
    text-align: center;
}

.codeblock {
    border: solid white 4px;
    margin: 4px;
}

ul.collapsible {
    border: solid white 4px;
    padding: 1em;
    margin: 1em;
    cursor: grab;
}

ul.tabs{
    margin: 0px;
    padding: 0px;
    list-style: none;
}
ul.tabs li{
    background: none;
    color: #222;
    display: inline-block;
    padding: 10px 15px;
    cursor: pointer;
}

ul.tabs li.current{
    background: #ededed;
    color: #222;
}

.tab-content{
    display: none;
    background: #ededed;
    padding: 15px;
}

.tab-content.current{
    display: inherit;
}

.sensorDetail {
    width: 40px;
    height: 40px;
    margin-top: 10px;
    margin-right: 10px;
}

.bottomMenu {
    position: absolute;
    bottom: 0;
    width: 100%;
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
}

.step-holder {
    margin: 2em 0;
}

.step {
    margin: 0.25em;
    width: 98%;
    padding: 0.5em 1em;
    border-radius: 0.25em;
    vertical-align: middle;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.cardHolder {
    padding: 0.5em 1em;
    margin: 0.5em;
    cursor: pointer;
    border-radius: 0.25em;
    display: table-cell;
    vertical-align: middle;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.step .subtle {
    color: #000;
    font-size: 0.5em;
    font-weight: 400;
    letter-spacing: -1px;
}

.bg-warning {
    background: #dd2c00;
}

.bg-gold {
    background: #ffab00;
}

.step i {
    font-size: 3em;
}

.bg-step0 {
    background: #ffd600;
}

.bg-sourcetable {
    background: rgba(255, 255, 255, 0);
}

.bg-header {
    background: -webkit-linear-gradient(70deg, #ff6464 70%, #5ac8fa 70%);
    background: -o-linear-gradient(70deg, #ff6464 70%, #5ac8fa 70%);
    background: -moz-linear-gradient(70deg, #ff6464 70%, #5ac8fa 70%);
    background: linear-gradient(70deg, #ff6464 70%, #5ac8fa 70%);
}

.card {
    display: flex;
    overflow-x: auto;
}

.outputArea {
    margin: 4%;
}

.mapArea {
    height: 360px;
    margin: auto;
    width: 360px;
}

.tooltip {
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted black;
    /* If you want dots under the hoverable text */
}

/* Tooltip text */

.tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;
    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */

.tooltip:hover .tooltiptext {
    visibility: visible;
}

table {
    width: 100%;
    border-collapse: collapse;
}

th {
    background: #333;
    color: white;
    font-weight: bold;
    cursor: s-resize;
    background-repeat: no-repeat;
    background-position: 3% center;
}

td, th {
    padding: 6px;
    cursor: pointer;
    text-align: left;
}

th.des:after {
    content: "\21E9";
}

th.aes:after {
    content: "\21E7";
}

/*
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table, thead, tbody, th, td, tr {
        display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    tr {
        cursor: pointer;
    }

    td {
        position: relative;
        padding-left: 50%;
    }

    td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 6px;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
    }

    /*
    Label the data
    */
    td:before {
        content: attr(data-th) ": ";
        font-weight: bold;
        width: 6.5em;
        display: inline-block;
    }
}

/* Smartphones (portrait and landscape) ----------- */

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
    body {
        padding: 0;
        margin: 0;
        width: 320px;
    }
}

/* iPads (portrait and landscape) ----------- */

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
    body {
        width: 495px;
    }
}